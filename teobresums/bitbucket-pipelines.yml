image: atlassian/default-image:3

pipelines:
    branches:
        '{master,feature/*}':
            - step:
                name: Build C & Run
                script:
                  - apt-get update -y
                  - apt-get install -y libgsl-dev
                  - cd C && make #build C
                  - ./TEOBResumS.x -p par/GW150914.par
                  - ./TEOBResumS.x -p par/GW170817.par
                condition:
                    changesets:
                        includePaths:
                        - "C/src/*"

            - step:
                name: Build EOBRunPy
                script:
                  - apt-get update -y
                  - apt-get install -y libgsl-dev python3-pip
                  - pip3 install --upgrade pip
                  - pip3 install numpy
                  - cd Python && python3 setup.py install
                condition:
                    changesets:
                        includePaths:
                        - "C/src/*"
                        - "Python/TEOBResumSWrap.c"

            - step:
                name: Memory Check
                trigger: manual
                script:
                  - apt-get update -y
                  - apt-get install -y libgsl-dev valgrind
                  - cd C && make
                  - valgrind ./TEOBResumS.x -p par/GW150914.par
                
            - step:
                name: Run Benchmarks
                trigger: manual
                script:
                  - export HOME=$PWD
                  - apt-get update -y
                  - apt-get install -y libgsl-dev python3-pip
                  - pip3 install --upgrade pip
                  - pip3 install numpy
                  - cd C && make #build C
                  - export TEOBRESUMS=$PWD
                  - cd $HOME/Utils/Benchmark && make

            - step:
                name: 'Deploy to Test'
                deployment: test
                trigger: manual
                script:
                  - cd Python
                  - apt-get update -y
                  - apt-get install -y libgsl-dev python3-pip python3.8-venv
                  - pip3 install --upgrade pip
                  - pip3 install build
                  - python3 -m build
                  - python3 -m pip install --upgrade twine
                  - python3 -m twine upload --repository testpypi dist/*.tar.gz -u $PYPI_USERNAME -p $PYPI_PASSWORD

            - step:
                name: 'Deploy to Production'
                deployment: production
                trigger: manual
                script:
                  - cd Python
                  - apt-get update -y
                  - apt-get install -y libgsl-dev python3-pip python3.8-venv
                  - pip3 install --upgrade pip
                  - pip3 install build
                  - python3 -m build
                  - python3 -m pip install --upgrade twine
                  - python3 -m twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD
